package com.company;
import java.util.Date;
import java.util.Scanner;
public class Main {

    public static void main(String[] args) {


        //1
        // public- כול המחלקות באותו פרויקט יכולות לקורא למשתה מסוג זה.
        // private- משתנה ייחודי למחלקה שלו ולא ניתן לקרוא לו משום מקום אחר.
        // default- ניתן לראות את המשתנה במחלקה או ב packege בה הוא נמצא.

        //2
        //import- פקודה שמייבאת ממחלקות אחרות ופקודות מסויימות.
        // package- החבילה שכול הקוד שקשור לאותו פרויקט כתוב בו.

        //3
        //הוא כלי פתוח וחופשי לבדיקות יחידה בשפת התכנות Java.

        //4
        // לא ניתן היה להדפיס את השדה m_owner_name כי השדה הוא private

        //5
        // היתרונות שלהם הם: דרכם אפשר להוציא מידע מדבר ספציפי בכדי לא להגיע למכלול השלם, כלומר שאם עשיתי מופע של בן אדם ואני רוצה רק את שמו או לאתחל רק את שמו אני יכול להשתמש ב-GETTER ו-SETTER בכדי שזה יהיה נקודתי. וגם בגלל שרק עם GET ו-SET אני יכול לגשת לשדות PRIVATE.
        // היתרות בשימוש ב-LOMBOCK חוסך בהתבלבלות המתכנת ובכמות הקוד שרשום.

        //6
        // ברגע שמתכנת משתמש ב-m הוא עושה זאת בכדי לסמן שדות של המחלקה עצמה ובכדי לא להשתמש ב-this.
        //this() היא פקודה שמשתמשים בה בכדי לגשת לקונסטרוקטור הראשי ולשנות שם ערכים בזמן ששאר הערכים שלא נקבל בקונסטוקטור הנוכחי נשארים כפי שהם.

        //8
        // מה שקורה לפונקציות והשדות זה- אם לדוגמא ניצור מחלקת ANIMAL ושמתי בה כמה שדות או פונקציות, ברגע שעשיתי הורשה כול התכולה של מחלקתANIMAL עוברת ליורש ולא להפך.
        // המילה EXTAND מלשון כן הוא. הרחבת כול מחלקה היורשת ממחלקה אחרת.

        //9
        // מחלקה יכולה לרשת את המאפיינים של מחלקה אחרת בזמן שהמחלקה האחרת יורשת את מאפייניה ממחלקה שונה. כלומר Drone יכול לרשת מ-HELICOPTER והוא יקבל את המאפיינים של AIRCRAFT כי HELICOPTER יורש ממנו.
        // לא ניתן לרשת בפקודת EXTAND משתי מחלקות בו זמנית

        //10
        //כן

        //11
        // ניתן לייצר להם GETTER אך לא SETTER
        // אפשר לאתחל אותם אך ורק בזמן כתיבת השדות או בקונסטרוקטור.

        //15
        // אם ניצור מחלקה בשם Airplane היא תירש ממחלקת Aircraft
        /*
        Date date = new Date();
         Drone h1=new Drone("EKAK",50,60.5F,date,"2785469");
        h1.takeoof();
        System.out.println(h1);
         */
    }
}
